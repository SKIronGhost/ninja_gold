from django.shortcuts import render, redirectfrom random import randint, choicefrom datetime import datetimefrom django.http import JsonResponsefrom json import dumpsresponse = []win_limit = 0def index(request):    global response, win_limit    response = []    win_limit = int(request.POST['win_limit'])    request.session['current_gold'] = 0    request.session['action'] = {}    return render(request, 'index.html')def new_game(request):    return render(request, 'new_game.html')def json_creator(request, data):    # global response    # response.insert(0, data)    # context = {"data": dumps(data)}    # return HttpResponse(dumps(data), content_type='application/json')    return JsonResponse({"data": data})    # return render(request, "json.html", context)def text_creator(gold_value, entered_place):    time = datetime.now().strftime("%y-%m-%d %I:%M %p")    if gold_value > 0:        text_success = "<p class='text-success font-weight-bold'>Earned %s golds from the %s (%s)</p>" % (gold_value, entered_place, time)        return text_success    elif gold_value == 0:        text_neutral = '<p class="text-danger font-weight-bold">Entered a %s and %s golds earned... Try again.. (%s)</p>' % (entered_place, gold_value, time)        return text_neutral    if gold_value < 0:        text_loose = '<p class="text-danger font-weight-bold">Entered a %s and lost %s golds... Ouch.. (%s)</p>' % (entered_place, (gold_value * -1), time)        return text_loosedef playing(request):    context = {"data": response}    if request.session['current_gold'] < 0:        return render(request, 'game_over.html')    elif request.session['current_gold'] > win_limit:        return render(request, 'winner.html')    # print(response[0])    return render(request, 'index.html', context)def process_farm(request):    global response    if "farm" in request.POST:        random_farm = randint(10, 20)        request.session['current_gold'] += random_farm        response.insert(0, text_creator(random_farm, "farm"))    return redirect('/playing')def process_cave(request):    if "cave" in request.POST:        random_cave = randint(5, 10)        request.session['current_gold'] += random_cave        response.insert(0, text_creator(random_cave, "cave"))    return redirect('/playing')def process_house(request):    if "house" in request.POST:        random_house = randint(2, 5)        request.session['current_gold'] += random_house        response.insert(0, text_creator(random_house, "house"))    return redirect('/playing')def process_casino(request):    if "casino" in request.POST:        random_casino = [randint(0, 50), randint(-50, 0)]        choice_random = choice(random_casino)        request.session['current_gold'] += choice_random        response.insert(0, text_creator(choice_random, "casino"))    return redirect('/playing')    # context = {    #   "data": dumps(json_data)    # }    # json_creator(request, response)    # JsonResponse({"data": response})    # return render(request, 'index.html')    # return HttpResponse(dumps(json_data), content_type='application/json')